# This workflow tests Sqitch's SQLite engine on all supported versions of
# SQLite. It runs for pushes and pull requests on the main and develop branches,
# or any time a file matching "sqlite.*" changes.
name: ðŸ’¡ SQLite
on: [push, pull_request]
jobs:
  filter:
    # No need to filter on develop or main.
    if: github.ref != 'refs/heads/develop' && github.ref != 'refs/heads/main'
    runs-on: ubuntu-latest
    name: ðŸ”Ž Detect SQLite Changes
    steps:
      - uses: actions/checkout@v2
      - uses: dorny/paths-filter@v2
        id: filter
        with: { filters: '{ sqlite: [ "**/sqlite.*" ] }' }
  SQLite:
    # Run only on develop or main, or when a pg file has changed in the branch.
    if: github.ref == 'refs/heads/develop' || github.ref == 'refs/heads/main' || needs.filter.outputs.sqlite == 'true'
    strategy:
      matrix:
        # https://sqlite.org/chronology.html
        sqlite: [3.36.0, 3.35.5, 3.34.1, 3.33.0, 3.32.3, 3.31.1, 3.30.1, 3.29.0, 3.28.0, 3.27.2, 3.26.0, 3.25.3, 3.24.0, 3.23.1, 3.22.0, 3.21.0, 3.20.1, 3.19.3, 3.18.0, 3.17.0, 3.16.2, 3.15.2, 3.14.2, 3.13.0, 3.12.2, 3.11.1, 3.10.2, 3.9.2, 3.8.11.1, 3.7.17]
    name: ðŸ’¡ SQLite ${{ matrix.sqlite }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Setup perl
        id: perl
        uses: shogo82148/actions-setup-perl@v1
        with: { perl-version: latest }
      - name: Cache CPAN Modules
        uses: actions/cache@v2
        with:
          path: local/lib
          key: perl-${{ steps.perl.outputs.perl-hash }}
      - name: Download cpanfile
        uses: carlosperate/download-file-action@v1.0.3
        with:
          file-url: https://fastapi.metacpan.org/source/DWHEELER/App-Sqitch-v1.1.0/dist/cpanfile
      - run: cpm install --verbose --show-build-log-on-failure --no-test --with-recommends --cpanfile cpanfile
      - run: cpm install --verbose --show-build-log-on-failure --no-test --with-recommends DBI
      - name: Install SQLite
        env: { PERL5LIB: "${{ github.workspace }}/local/lib/perl5" }
        run: dev/linux-sqlite ${{ matrix.sqlite }}
      - name: prove
        env:
          PERL5LIB: "${{ github.workspace }}/local/lib/perl5"
          LIVE_SQLITE_REQUIRED: true
        run: prove -lvr t/sqlite.t
