=head1 Name

sqitch-init - Create a new Sqitch project

=head1 Synopsis

  sqitch [options] init project
  sqitch [options] init --uri uri project

=head1 Description

This command creates an new Sqitch project -- basically a F<sqitch.conf> file,
a F<sqitch.plan> file, and a F<sql> directory with F<deploy>, F<revert>, and
F<verify> subdirectories.

Running sqitch init in an existing project is safe. It will not overwrite
things that are already there.

=head1 Options

=over

=item C<--uri>

Optional URI to associate with the project. If present, the URI will be
written to the project plan and used for added uniqueness in hashed object
IDs.

=item C<--deploy-dir>

  sqitch --deploy-dir db/up

Path to a directory containing deploy scripts. Overrides the value implied by
C<--top-dir>.

=item C<--revert-dir>

  sqitch --revert-dir db/down

Path to a directory containing revert scripts. Overrides the value implied by
C<--top-dir>.

=item C<--verify-dir>

  sqitch --verify-dir db/t

Path to a directory containing verify scripts. Overrides the value implied by
C<--top-dir>.

=item C<--reworked-dir>

  sqitch --reworked-dir db/prev

Path to a directory containing reworked scripts. Overrides the value implied by
the core Sqitch C<--top-dir> option.

=item C<--reworked-deploy-dir>

  sqitch --reworked-deploy-dir db/prev/up

Path to a directory containing reworked deploy scripts. Overrides the value
implied by C<--reworked-dir>.

=item C<--reworked-revert-dir>

  sqitch --reworked-revert-dir db/prev/down

Path to a directory containing rewroekd revert scripts. Overrides the value
implied by C<--reworked-dir>.

=item C<--reworked-verify-dir>

  sqitch --reworked-verify-dir db/prev/t

Path to a directory containing reworked verify scripts. Overrides the value
implied by C<--reworked-dir>.

=item C<--extension>

  sqitch --extension ddl

The file name extension on deploy, revert, and verify scripts. Defaults to
C<sql>.

=back

=head1 Configuration

The most important thing C<sqitch init> does is create the project plan file,
F<sqitch.conf>. A few core Sqitch and C<init>-specific options determine what
gets written to the file:

=over

=item Sqitch Options

=over

=item C<--plan-file>

Sets the C<core.plan_file> configuration variable.

=item C<--top-dir>

Determines the top-level directory to use when writing the plan and
theC<core.deploy_dir>, C<core.revert_dir>, and C<core.verify_dir> variables --
unless they are overridden by their more-specific options, detailed below.

=item C<--engine>

Sets the C<core.engine> configuration variable.

=item C<--client>

Sets the C<engine.$engine.client> configuration variable if C<--engine> is also
passed.

=item C<--registry>

Sets the C<engine.$engine.registry> configuration variable if C<--engine> is also
passed.

=back

=item Init Options

=over

=item C<--deploy-dir>

Sets the C<core.deploy_dir> configuration variable.

=item C<--revert-dir>

Sets the C<core.revert_dir> configuration variable.

=item C<--verify-dir>

Sets the C<core.verify_dir> configuration variable.

=item C<--reworked-dir>

Sets the C<core.reworked_dir> configuration variable.

=item C<--reworked-deploy-dir>

Sets the C<core.reworked_deploy_dir> configuration variable.

=item C<--reworked-revert-dir>

Sets the C<core.reworked_revert_dir> configuration variable.

=item C<--reworked-verify-dir>

Sets the C<core.reworked_verify_dir> configuration variable.

=item C<--extension>

Sets the C<core.extension> configuration variable.

=back

=back

As a general rule, you likely won't need any of these options except for
C<--engine>, since many commands need to know what engine to use, and
specifying it on the command-line forever after would be annoying.

These variables will only be written if their corresponding options are
specified. Otherwise, core options get written as comments with user or system
configuration settings, or, failing any values from those locations, from
their default values. If no defaults are specified, they will still be
written, commented out, with a bar C<=> and no value. This allows one to know
what sorts of things are available to edit.

=head1 Examples

Start a new Sqitch project using the SQLite engine, setting the top directory
for the project to F<sqlite>:

  sqitch --engine sqlite --top-dir sqlite init

Start a new Sqitch project using the PostgreSQL engine, setting the top
directory to F<postgres>, a script extension of C<ddl>, and a version-specific
client:

  sqitch --engine  pg \
         --top-dir postgres \
         --client  /opt/pgsql-9.1/bin/psql \
         init --extension ddl \

=head1 Sqitch

Part of the L<sqitch> suite.
